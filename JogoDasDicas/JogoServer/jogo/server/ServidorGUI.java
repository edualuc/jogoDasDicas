package jogo.server;

/**
 *
 * @author Eduardo Amador Lucas
 * @author Jo√£o Gilberto Heitor Gaiewski 
 * @version 1
 */
public class ServidorGUI extends javax.swing.JFrame {
    private String status = "Iniciando...";
    private Servidor server;

    /**
     * Creates new form ServidorGUI
     */
    public ServidorGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField1 = new java.awt.TextField();
        labelstatus_descricao = new java.awt.Label();
        labelstatus_status = new java.awt.Label();
        TxTimes = new javax.swing.JTextField();
        TxJogadores = new javax.swing.JTextField();
        BtnServidor = new javax.swing.JButton();
        TxQuantTime = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BtnJogo = new javax.swing.JButton();

        textField1.setText("textField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelstatus_descricao.setText("Estado do Servidor:");

        labelstatus_status.setText("Iniciando");

        TxTimes.setText("2");

        TxJogadores.setText("2");

        BtnServidor.setText("Iniciar Servidor");
        BtnServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnServidorActionPerformed(evt);
            }
        });

        TxQuantTime.setText("Quantidade de times");

        jLabel2.setText("Jogadores por time");

        BtnJogo.setText("Iniciar Jogo");
        BtnJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnJogoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelstatus_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelstatus_status, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TxQuantTime)
                            .addComponent(jLabel2)
                            .addComponent(BtnServidor)
                            .addComponent(BtnJogo)
                            .addComponent(TxTimes, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TxJogadores, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelstatus_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelstatus_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(TxQuantTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxTimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxJogadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnServidor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnJogo)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnServidorActionPerformed
        initServidor();
    }//GEN-LAST:event_BtnServidorActionPerformed

    private void BtnJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnJogoActionPerformed
        server.iniciarJogo();
    }//GEN-LAST:event_BtnJogoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServidorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServidorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServidorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServidorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ServidorGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnJogo;
    private javax.swing.JButton BtnServidor;
    private javax.swing.JTextField TxJogadores;
    private javax.swing.JLabel TxQuantTime;
    private javax.swing.JTextField TxTimes;
    private javax.swing.JLabel jLabel2;
    private java.awt.Label labelstatus_descricao;
    private java.awt.Label labelstatus_status;
    private java.awt.TextField textField1;
    // End of variables declaration//GEN-END:variables

    private void initServidor() {
        labelstatus_status.setText(status);
        int quantidadeDeTimes = Integer.parseInt(TxTimes.getText());
        int quantidadeDeJogadores =  Integer.parseInt(TxJogadores.getText());

        server = new Servidor(labelstatus_status, quantidadeDeTimes, quantidadeDeJogadores);
        
        Thread myTheread = new Thread(server);
        myTheread.start();
        
    }
}
